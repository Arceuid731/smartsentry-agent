# Configuration OpenTelemetry pour SmartSentry Agent sur Linux
# Version corrigée et fiabilisée

receivers:
  hostmetrics:
    collection_interval: 15s
    scrapers:
      cpu: {}
      memory: {}
      disk: {}
      network: {}
      filesystem: {}
      load: {}
      paging: {}

processors:
  # Étape 1: Détecte automatiquement les attributs de l'hôte (comme host.name)
  resourcedetection:
    detectors: [system]
    override: true

  # Étape 2: Ajoute et modifie des attributs de ressource de manière fiable
  resource:
    attributes:
      # Action 1: Insère un nom de service statique. C'est toujours une bonne pratique.
      - key: service.name
        value: "smartsentry.agent.linux"
        action: insert
      
      # Action 2 (MODIFIÉE): Insère un ID d'instance en copiant la valeur de l'attribut 'host.name'
      # qui a été détecté à l'étape précédente. C'est beaucoup plus robuste que ${env:HOSTNAME}.
      - key: service.instance.id
        from_attribute: "host.name"
        action: insert

  # Étape 3: Regroupe en lots pour l'efficacité
  batch:
    timeout: 10s
    send_batch_size: 1024

exporters:
  otlphttp:
    endpoint: http://REMPLACE-PAR-IP-GATEWAY:30080
    tls:
      insecure: true
  
  # L'exportateur de debug reste utile pour la validation
  # debug:
  #   verbosity: normal

service:
  # Pipeline de traitement des métriques
  pipelines:
    metrics:
      receivers: [hostmetrics]
      # L'ordre est crucial : 1. Détecter, 2. Enrichir, 3. Batcher
      processors: [resourcedetection, resource, batch]
      exporters: [otlphttp]
      # Décommentez pour un debug complet sur l'agent :
      # exporters: [otlphttp, debug]
